---
- name: Check if Helm is installed at the desired version
  ansible.builtin.command: helm version --short
  register: helm_version_check
  failed_when: false
  changed_when: false
  check_mode: no

- name: Set Helm installation required flag
  set_fact:
    helm_install_required: "{{ helm_version_check.rc != 0 or helm_version not in helm_version_check.stdout }}"

- name: Install Helm if not present at desired version
  block:
    - name: Download Helm
      ansible.builtin.get_url:
        url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
        dest: "/tmp/helm-{{ helm_version }}-linux-amd64.tar.gz"
        mode: '0755'
      become: true

    - name: Extract Helm
      ansible.builtin.unarchive:
        src: "/tmp/helm-{{ helm_version }}-linux-amd64.tar.gz"
        dest: "/tmp"
        remote_src: yes
        creates: "/tmp/linux-amd64/helm"
      become: true

    - name: Move Helm binary to /usr/local/bin
      ansible.builtin.command:
        cmd: mv /tmp/linux-amd64/helm /usr/local/bin/helm
        creates: "/usr/local/bin/helm"
      become: true
  when: helm_version_check.stdout is not search(helm_version)

- name: Check existing Helm repositories
  ansible.builtin.command:
    cmd: helm repo list --kubeconfig "/etc/rancher/rke2/rke2.yaml"
  register: helm_repo_list
  failed_when: helm_repo_list.rc not in [0,1]
  changed_when: false
  check_mode: no

- name: Add Jetstack repository if missing
  ansible.builtin.shell:
    cmd: helm repo add jetstack https://charts.jetstack.io --kubeconfig "/etc/rancher/rke2/rke2.yaml"
  when: "'jetstack' not in helm_repo_list.stdout"
  become: true

- name: Add Rancher-stable repository if missing
  ansible.builtin.shell:
    cmd: helm repo add rancher-stable https://releases.rancher.com/server-charts/stable --kubeconfig "/etc/rancher/rke2/rke2.yaml"
  when: "'rancher-stable' not in helm_repo_list.stdout"
  become: true

- name: Update Helm repositories
  ansible.builtin.shell:
    cmd: helm repo update --kubeconfig "/etc/rancher/rke2/rke2.yaml"
  become: true

- name: Ensure Ingress Controller is Ready
  ansible.builtin.shell:
    cmd: kubectl --kubeconfig "/etc/rancher/rke2/rke2.yaml" get pods -n kube-system -l app.kubernetes.io/instance=rke2-ingress-nginx --field-selector=status.phase=Running | grep -v NAME
  register: ingress_ready
  until: ingress_ready.stdout != ""
  retries: 30
  delay: 10
  become: true
  failed_when: ingress_ready.rc != 0
  check_mode: no

- name: Install cert-manager
  ansible.builtin.shell:
    cmd: helm upgrade -i cert-manager jetstack/cert-manager -n cert-manager --create-namespace --set installCRDs=true --version "{{ cert_manager_version }}" --kubeconfig "/etc/rancher/rke2/rke2.yaml"
  become: true
  args:
    executable: /bin/bash

- name: Wait for all Cert Manager pods to be running
  ansible.builtin.shell: |
    kubectl get pods --namespace cert-manager --field-selector=status.phase!=Running | grep -v NAME || true
  register: cert_manager_pods
  until: cert_manager_pods.stdout == ""
  retries: 30
  delay: 10
  become: true

- name: Create cattle-system namespace
  ansible.builtin.k8s:
    kubeconfig: "/etc/rancher/rke2/rke2.yaml"
    name: cattle-system
    api_version: v1
    kind: Namespace
    state: present

- name: Check if Rancher is already installed
  ansible.builtin.shell:
    cmd: helm list -n cattle-system --kubeconfig "/etc/rancher/rke2/rke2.yaml"
  register: rancher_helm_list
  failed_when: false
  changed_when: false
  become: true

- name: Set flag to determine Rancher installation necessity
  set_fact:
    rancher_already_installed: "{{ 'rancher' in rancher_helm_list.stdout_lines }}"

- name: Debug - Show if Rancher installation is necessary
  ansible.builtin.debug:
    msg: "Is Rancher already installed? {{ rancher_already_installed }}"

- name: Install Rancher
  when: not rancher_already_installed
  block:
    - name: Install Rancher via Helm
      ansible.builtin.shell:
        cmd: |
          helm install rancher rancher-stable/rancher \
          --namespace cattle-system \
          --set hostname={{ rancher_hostname }} \
          --set bootstrapPassword={{ rancher_bootstrap_password }} \
          --set replicas={{ rancher_replica_count }} \
          --kubeconfig "/etc/rancher/rke2/rke2.yaml"
        executable: /bin/bash
      become: true